{
  "info": {
    "name": "Bauprodukt Demo API",
    "description": "Complete API collection for testing Bauprodukt Demo application with sample data. Includes Cart management and Order processing endpoints for e-commerce functionality.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "bauprodukt-demo",
    "version": {
      "major": 1,
      "minor": 2,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "Brands",
      "item": [
        {
          "name": "Get All Brands",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/brands?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "brands"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search by brand name",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieve all brands with pagination and optional search"
          }
        },
        {
          "name": "Search Brands",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/brands?search=bosch&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "brands"],
              "query": [
                {
                  "key": "search",
                  "value": "bosch"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search brands by name"
          }
        },
        {
          "name": "Create Brand",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch\",\n  \"slug\": \"bosch\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/brands",
              "host": ["{{base_url}}"],
              "path": ["api", "brands"]
            },
            "description": "Create a new brand"
          }
        },
        {
          "name": "Create Brand (Auto Slug)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Makita Power Tools\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/brands",
              "host": ["{{base_url}}"],
              "path": ["api", "brands"]
            },
            "description": "Create brand with auto-generated slug from name"
          }
        },
        {
          "name": "Get Brand by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/brands/{{brand_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "brands", "{{brand_id}}"]
            },
            "description": "Get a specific brand by ID"
          }
        },
        {
          "name": "Update Brand",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch Professional\",\n  \"slug\": \"bosch-professional\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/brands/{{brand_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "brands", "{{brand_id}}"]
            },
            "description": "Update an existing brand"
          }
        },
        {
          "name": "Delete Brand",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/brands/{{brand_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "brands", "{{brand_id}}"]
            },
            "description": "Delete a brand (only if not used by products)"
          }
        }
      ],
      "description": "Brand management endpoints"
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "parent_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by parent category ID"
                }
              ]
            },
            "description": "Get all categories with optional filters"
          }
        },
        {
          "name": "Get Root Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories?parent_id=null",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"],
              "query": [
                {
                  "key": "parent_id",
                  "value": "null"
                }
              ]
            },
            "description": "Get only root categories (no parent)"
          }
        },
        {
          "name": "Create Root Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"G√º√ß Aletleri\",\n  \"slug\": \"guc-aletleri\",\n  \"emoji\": \"üîß\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Create a root category"
          }
        },
        {
          "name": "Create Subcategory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Matkap\",\n  \"slug\": \"matkap\",\n  \"emoji\": \"üî®\",\n  \"parent_id\": \"{{category_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Create a subcategory with parent"
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "{{category_id}}"]
            },
            "description": "Get a specific category by ID"
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Professional G√º√ß Aletleri\",\n  \"slug\": \"professional-guc-aletleri\",\n  \"emoji\": \"‚öôÔ∏è\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "{{category_id}}"]
            },
            "description": "Update an existing category"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "{{category_id}}"]
            },
            "description": "Delete a category"
          }
        }
      ],
      "description": "Category management endpoints"
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "brand",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by brand ID"
                },
                {
                  "key": "category",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by category ID"
                },
                {
                  "key": "stock_code",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by stock code"
                }
              ]
            },
            "description": "Get all products with optional filters"
          }
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products?search=matkap&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "search",
                  "value": "matkap"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search products by name"
          }
        },
        {
          "name": "Filter Products by Brand",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products?brand={{brand_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "brand",
                  "value": "{{brand_id}}"
                }
              ]
            },
            "description": "Filter products by brand"
          }
        },
        {
          "name": "Search Products by Stock Code",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products?stock_code={{stock_code}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "stock_code",
                  "value": "{{stock_code}}"
                }
              ]
            },
            "description": "Search products by stock code"
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch Professional GSB 18V-55 Ak√ºl√º Darbeli Matkap\",\n  \"slug\": \"bosch-professional-gsb-18v-55-akulu-darbeli-matkap\",\n  \"description\": \"18V Li-ion ak√ºl√º darbeli matkap. Metal ve ah≈üap delme i≈ülemleri i√ßin ideal.\",\n  \"price\": 899.99,\n  \"stock\": 25,\n  \"stock_code\": \"BSH-GSB18V55\",\n  \"image_url\": \"https://example.com/images/bosch-drill.jpg\",\n  \"brand_id\": \"{{brand_id}}\",\n  \"category_id\": \"{{category_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            },
            "description": "Create a new product"
          }
        },
        {
          "name": "Create Product (Minimal)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Makita DHP484Z Ak√ºl√º Darbeli Matkap\",\n  \"price\": 750.00,\n  \"stock\": 15,\n  \"stock_code\": \"MKT-DHP484Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            },
            "description": "Create product with minimal required fields"
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            },
            "description": "Get a specific product by ID with brand and category info"
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch Professional GSB 18V-55 Ak√ºl√º Darbeli Matkap (Yenilenmi≈ü)\",\n  \"price\": 999.99,\n  \"stock\": 30,\n  \"stock_code\": \"BSH-GSB18V55-R\",\n  \"description\": \"Yenilenmi≈ü model. 18V Li-ion ak√ºl√º darbeli matkap. Metal ve ah≈üap delme i≈ülemleri i√ßin ideal. Geli≈ümi≈ü torque ayarlarƒ±.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            },
            "description": "Update an existing product"
          }
        },
        {
          "name": "Update Product Stock",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stock\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            },
            "description": "Update only product stock"
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            },
            "description": "Delete a product"
          }
        }
      ],
      "description": "Product management endpoints"
    },
    {
      "name": "Product Images",
      "item": [
        {
          "name": "Get Product Images",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images"]
            },
            "description": "Get all images for a product, ordered by order_index"
          }
        },
        {
          "name": "Bulk Upload Product Images",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file_0",
                  "type": "file",
                  "src": "",
                  "description": "First image file"
                },
                {
                  "key": "order_0",
                  "value": "0",
                  "type": "text",
                  "description": "Order index for first image"
                },
                {
                  "key": "is_cover_0",
                  "value": "true",
                  "type": "text",
                  "description": "Set as cover image"
                },
                {
                  "key": "file_1",
                  "type": "file",
                  "src": "",
                  "description": "Second image file",
                  "disabled": true
                },
                {
                  "key": "order_1",
                  "value": "1",
                  "type": "text",
                  "description": "Order index for second image",
                  "disabled": true
                },
                {
                  "key": "is_cover_1",
                  "value": "false",
                  "type": "text",
                  "description": "Not cover image",
                  "disabled": true
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images/bulk",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images", "bulk"]
            },
            "description": "Upload multiple images for a product in bulk. Only one image can be set as cover."
          }
        },
        {
          "name": "Upload Single Product Image",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Image file to upload"
                },
                {
                  "key": "order_index",
                  "value": "0",
                  "type": "text",
                  "description": "Order index for the image (optional, default: 0)"
                },
                {
                  "key": "is_cover",
                  "value": "false",
                  "type": "text",
                  "description": "Set as cover image (true/false, default: false)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images"]
            },
            "description": "Upload a single image for a product. If is_cover is true, existing cover will be removed."
          }
        },
        {
          "name": "Reorder Product Images",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"imageOrders\": [\n    {\n      \"id\": \"{{image_id_1}}\",\n      \"order_index\": 0\n    },\n    {\n      \"id\": \"{{image_id_2}}\",\n      \"order_index\": 1\n    },\n    {\n      \"id\": \"{{image_id_3}}\",\n      \"order_index\": 2\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images/reorder",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images", "reorder"]
            },
            "description": "Update the order of product images"
          }
        },
        {
          "name": "Set Cover Image",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images/{{image_id}}/cover",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images", "{{image_id}}", "cover"]
            },
            "description": "Set a specific image as the cover image for the product"
          }
        },
        {
          "name": "Delete Single Image",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images/{{image_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images", "{{image_id}}"]
            },
            "description": "Delete a single product image. If it's the cover image, another image will be automatically set as cover."
          }
        },
        {
          "name": "Delete All Product Images",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/images",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "images"]
            },
            "description": "Delete all images for a product"
          }
        }
      ],
      "description": "Product image management endpoints with cover and ordering support"
    },
    {
      "name": "Banners",
      "item": [
        {
          "name": "Get All Banners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/banners?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "is_active",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by active status (true/false)"
                }
              ]
            },
            "description": "Get all banners ordered by order_index"
          }
        },
        {
          "name": "Get Active Banners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/banners?is_active=true",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"],
              "query": [
                {
                  "key": "is_active",
                  "value": "true"
                }
              ]
            },
            "description": "Get only active banners"
          }
        },
        {
          "name": "Create Banner",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Yaz ƒ∞ndirimleri\",\n  \"image_url\": \"https://example.com/images/summer-sale-banner.jpg\",\n  \"link\": \"https://example.com/summer-sale\",\n  \"order_index\": 1,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"]
            },
            "description": "Create a new banner with image URL (JSON method)"
          }
        },
        {
          "name": "Create Banner (Auto Order)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Yeni √úr√ºnler\",\n  \"image_url\": \"https://example.com/images/new-products-banner.jpg\",\n  \"link\": \"https://example.com/new-products\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"]
            },
            "description": "Create banner with auto order_index and default active status (JSON method)"
          }
        },
        {
          "name": "Create Banner (No Image)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"√ñzel Kampanya\",\n  \"link\": \"https://example.com/special-campaign\",\n  \"order_index\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"]
            },
            "description": "Create banner without image (image can be added later via upload endpoint)"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('banner_id', response.id);",
                  "    console.log('Banner created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Banner by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}"]
            },
            "description": "Get a specific banner by ID"
          }
        },
        {
          "name": "Update Banner",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Mega Yaz ƒ∞ndirimleri\",\n  \"is_active\": true,\n  \"order_index\": 0\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}"]
            },
            "description": "Update an existing banner"
          }
        },
        {
          "name": "Deactivate Banner",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"is_active\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}"]
            },
            "description": "Deactivate a banner"
          }
        },
        {
          "name": "Delete Banner",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}"]
            },
            "description": "Delete a banner"
          }
        },
        {
          "name": "Create Banner with File Upload",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Kƒ±≈ü ƒ∞ndirimleri",
                  "type": "text",
                  "description": "Banner title"
                },
                {
                  "key": "link",
                  "value": "https://example.com/winter-sale",
                  "type": "text",
                  "description": "Banner link URL"
                },
                {
                  "key": "order_index",
                  "value": "0",
                  "type": "text",
                  "description": "Banner order (optional)"
                },
                {
                  "key": "is_active",
                  "value": "true",
                  "type": "text",
                  "description": "Is banner active"
                },
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Banner image file (required)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/banners/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "upload"]
            },
            "description": "Create a new banner with image upload (dedicated endpoint for multipart/form-data)"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('banner_id', response.id);",
                  "    console.log('Banner created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Upload Banner Image",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Banner image file to upload"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}/images",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}", "images"]
            },
            "description": "Upload or replace image for an existing banner"
          }
        },
        {
          "name": "Delete Banner Image",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/banners/{{banner_id}}/images",
              "host": ["{{base_url}}"],
              "path": ["api", "banners", "{{banner_id}}", "images"]
            },
            "description": "Delete the image from a banner (sets image_url to null)"
          }
        }
      ],
      "description": "Banner management endpoints. Use /api/banners for JSON requests (with image URLs) and /api/banners/upload for file uploads."
    },
    {
      "name": "File Upload",
      "item": [
        {
          "name": "Upload Image",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Image file to upload"
                },
                {
                  "key": "folder",
                  "value": "products",
                  "type": "text",
                  "description": "Upload folder (products, banners, etc.)"
                },
                {
                  "key": "bucket",
                  "value": "images",
                  "type": "text",
                  "description": "Storage bucket name"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "upload"]
            },
            "description": "Upload an image file to storage"
          }
        },
        {
          "name": "Upload Banner Image",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Banner image file to upload"
                },
                {
                  "key": "folder",
                  "value": "banners",
                  "type": "text"
                },
                {
                  "key": "bucket",
                  "value": "images",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "upload"]
            },
            "description": "Upload a banner image"
          }
        },
        {
          "name": "Delete Image",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/upload?url=https://example.com/images/file.jpg&bucket=images",
              "host": ["{{base_url}}"],
              "path": ["api", "upload"],
              "query": [
                {
                  "key": "url",
                  "value": "https://example.com/images/file.jpg",
                  "description": "Image URL to delete"
                },
                {
                  "key": "bucket",
                  "value": "images"
                }
              ]
            },
            "description": "Delete an image from storage"
          }
        }
      ],
      "description": "File upload and management endpoints"
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Get Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}"]
            },
            "description": "Get cart by session ID"
          },
          "response": []
        },
        {
          "name": "Create Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}"]
            },
            "description": "Create or get existing cart for session"
          },
          "response": []
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}"]
            },
            "description": "Clear all items from cart"
          },
          "response": []
        },
        {
          "name": "Get Cart Items",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items"]
            },
            "description": "Get all items in cart"
          },
          "response": []
        },
        {
          "name": "Add Item to Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.environment.set('cart_item_id', response.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items"]
            },
            "description": "Add product to cart or update quantity if already exists"
          },
          "response": []
        },
        {
          "name": "Get Cart Item",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items", "{{cart_item_id}}"]
            },
            "description": "Get specific cart item details"
          },
          "response": []
        },
        {
          "name": "Update Cart Item Quantity",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items", "{{cart_item_id}}"]
            },
            "description": "Update quantity of cart item"
          },
          "response": []
        },
        {
          "name": "Remove Item from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items", "{{cart_item_id}}"]
            },
            "description": "Remove specific item from cart"
          },
          "response": []
        }
      ],
      "description": "Shopping cart management endpoints"
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by order status",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search by customer name, email, or phone",
                  "disabled": true
                },
                {
                  "key": "order_number",
                  "value": "",
                  "description": "Search by order number",
                  "disabled": true
                }
              ]
            },
            "description": "Get all orders with pagination and filters"
          },
          "response": []
        },
        {
          "name": "Search Orders by Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?status=pending&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Filter orders by status (pending, confirmed, processing, shipped, delivered, cancelled)"
          },
          "response": []
        },
        {
          "name": "Search Orders by Customer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?search=john&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "search",
                  "value": "john"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search orders by customer name, email, or phone"
          },
          "response": []
        },
        {
          "name": "Create Order from Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.environment.set('order_id', response.id);",
                  "    }",
                  "    if (response.order_number) {",
                  "        pm.environment.set('order_number', response.order_number);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{session_id}}\",\n  \"customer_name\": \"John Doe\",\n  \"customer_email\": \"john.doe@example.com\",\n  \"customer_phone\": \"5551234567\",\n  \"shipping_province\": \"ƒ∞stanbul\",\n  \"shipping_district\": \"Kadƒ±k√∂y\",\n  \"shipping_postal_code\": \"34710\",\n  \"shipping_address\": \"Moda Caddesi No:123 Daire:4 Kadƒ±k√∂y/ƒ∞stanbul\",\n  \"billing_province\": \"ƒ∞stanbul\",\n  \"billing_district\": \"Kadƒ±k√∂y\",\n  \"billing_postal_code\": \"34710\",\n  \"billing_address\": \"Moda Caddesi No:123 Daire:4 Kadƒ±k√∂y/ƒ∞stanbul\",\n  \"notes\": \"Kapƒ± zilini √ßalmayƒ±n, k√∂pek var. Telefon a√ßƒ±lmazsa kapƒ±cƒ±ya bƒ±rakabilirsiniz.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            },
            "description": "Create order from cart items with customer information"
          },
          "response": []
        },
        {
          "name": "Create Order (Minimal)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{session_id}}\",\n  \"customer_name\": \"Jane Smith\",\n  \"customer_email\": \"jane.smith@example.com\",\n  \"customer_phone\": \"5559876543\",\n  \"shipping_province\": \"Ankara\",\n  \"shipping_district\": \"√áankaya\",\n  \"shipping_postal_code\": \"06100\",\n  \"shipping_address\": \"Atat√ºrk Bulvarƒ± No:456 √áankaya/Ankara\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            },
            "description": "Create order with minimal required information (no billing address)"
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Get order details by ID"
          },
          "response": []
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Update order status (pending, confirmed, processing, shipped, delivered, cancelled)"
          },
          "response": []
        },
        {
          "name": "Update Order Details",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"processing\",\n  \"customer_name\": \"John Doe Jr.\",\n  \"customer_phone\": \"5551111111\",\n  \"notes\": \"Acil sipari≈ü - hƒ±zlƒ± g√∂nderim talep ediliyor\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Update multiple order fields"
          },
          "response": []
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Delete order (only pending or cancelled orders can be deleted)"
          },
          "response": []
        }
      ],
      "description": "Order management endpoints"
    },
    {
      "name": "Example Workflow",
      "item": [
        {
          "name": "1. Create Brand (Bosch)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch\",\n  \"slug\": \"bosch\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/brands",
              "host": ["{{base_url}}"],
              "path": ["api", "brands"]
            },
            "description": "Step 1: Create Bosch brand"
          }
        },
        {
          "name": "2. Create Category (Power Tools)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"G√º√ß Aletleri\",\n  \"slug\": \"guc-aletleri\",\n  \"emoji\": \"üîß\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Step 2: Create Power Tools category"
          }
        },
        {
          "name": "3. Create Subcategory (Drills)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Matkap\",\n  \"slug\": \"matkap\",\n  \"emoji\": \"üî®\",\n  \"parent_id\": \"REPLACE_WITH_CATEGORY_ID_FROM_STEP_2\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Step 3: Create Drills subcategory"
          }
        },
        {
          "name": "4. Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bosch Professional GSB 18V-55 Ak√ºl√º Darbeli Matkap\",\n  \"slug\": \"bosch-professional-gsb-18v-55-akulu-darbeli-matkap\",\n  \"description\": \"18V Li-ion ak√ºl√º darbeli matkap. Metal ve ah≈üap delme i≈ülemleri i√ßin ideal. 13mm mandren kapasitesi.\",\n  \"price\": 899.99,\n  \"stock\": 25,\n  \"brand_id\": \"REPLACE_WITH_BRAND_ID_FROM_STEP_1\",\n  \"category_id\": \"REPLACE_WITH_SUBCATEGORY_ID_FROM_STEP_3\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            },
            "description": "Step 4: Create product with brand and category"
          }
        },
        {
          "name": "5. Create Banner",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Bosch Professional Serisi ƒ∞ndirimi\",\n  \"image_url\": \"https://via.placeholder.com/1200x400/007bff/ffffff?text=Bosch+Professional+ƒ∞ndirim\",\n  \"link\": \"/brands/bosch\",\n  \"order_index\": 0,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/banners",
              "host": ["{{base_url}}"],
              "path": ["api", "banners"]
            },
            "description": "Step 5: Create promotional banner"
          }
        }
      ],
      "description": "Complete workflow example from brand creation to product listing"
    },
    {
      "name": "Cart & Order Workflow",
      "item": [
        {
          "name": "1. Create/Get Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.cart_id) {",
                  "        pm.environment.set('cart_id', response.cart_id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}"]
            },
            "description": "Step 1: Create or get existing cart for the session"
          }
        },
        {
          "name": "2. Add Product to Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.environment.set('cart_item_id', response.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items"]
            },
            "description": "Step 2: Add product to cart (requires product_id from previous workflow)"
          }
        },
        {
          "name": "3. Add Another Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items"]
            },
            "description": "Step 3: Add same product again (will increase quantity)"
          }
        },
        {
          "name": "4. Update Cart Item Quantity",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}", "items", "{{cart_item_id}}"]
            },
            "description": "Step 4: Update item quantity in cart"
          }
        },
        {
          "name": "5. View Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "{{session_id}}"]
            },
            "description": "Step 5: View complete cart with totals"
          }
        },
        {
          "name": "6. Create Order from Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.environment.set('order_id', response.id);",
                  "    }",
                  "    if (response.order_number) {",
                  "        pm.environment.set('order_number', response.order_number);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{session_id}}\",\n  \"customer_name\": \"Workflow Test User\",\n  \"customer_email\": \"workflow@example.com\",\n  \"customer_phone\": \"5551234567\",\n  \"shipping_province\": \"ƒ∞stanbul\",\n  \"shipping_district\": \"Kadƒ±k√∂y\",\n  \"shipping_postal_code\": \"34710\",\n  \"shipping_address\": \"Workflow Test Address, Kadƒ±k√∂y/ƒ∞stanbul\",\n  \"notes\": \"This is a test order from Postman workflow\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            },
            "description": "Step 6: Create order from cart (cart will be cleared after successful order)"
          }
        },
        {
          "name": "7. View Created Order",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Step 7: View the created order details"
          }
        },
        {
          "name": "8. Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Step 8: Update order status to confirmed"
          }
        }
      ],
      "description": "Complete cart and order workflow from adding items to cart to order creation and management"
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "description": "Base URL for the API (change to your deployed URL)"
    },
    {
      "key": "brand_id",
      "value": "",
      "description": "Brand ID for testing (copy from create brand response)"
    },
    {
      "key": "category_id",
      "value": "",
      "description": "Category ID for testing (copy from create category response)"
    },
    {
      "key": "product_id",
      "value": "",
      "description": "Product ID for testing (copy from create product response)"
    },
    {
      "key": "banner_id",
      "value": "",
      "description": "Banner ID for testing (copy from create banner response)"
    },
    {
      "key": "session_id",
      "value": "test-session-123",
      "description": "Session ID for cart testing"
    },
    {
      "key": "cart_id",
      "value": "",
      "description": "Cart ID for testing (copy from cart response)"
    },
    {
      "key": "cart_item_id",
      "value": "",
      "description": "Cart item ID for testing (copy from add item response)"
    },
    {
      "key": "order_id",
      "value": "",
      "description": "Order ID for testing (copy from create order response)"
    },
    {
      "key": "order_number",
      "value": "",
      "description": "Order number for testing (copy from create order response)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
} 